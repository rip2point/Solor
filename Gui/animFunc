function CreateButton(parent, header, callback)
	local function RippleEffect(didError)
		local ripple = Instance.new("Frame")
		if didError == true then
			ripple.BackgroundColor3 = Color3.fromRGB(255, 93, 96)
		else
			ripple.BackgroundColor3 = Color3.fromRGB(150,150,150)
		end
		ripple.Parent = parent
		ripple.AnchorPoint = Vector2.new(0.5, 0.5)
		ripple.Name = "RippleEffect"
		ripple.Position = UDim2.new(0.483, 0,0.552, 0)
		ripple.Size = UDim2.new(0,0,0,0)
		ripple.BackgroundTransparency = 0.5
		local corner = Instance.new("UICorner")
		corner.Parent = ripple

		game:GetService("TweenService"):Create(ripple, TweenInfo.new(0.43), {Size = UDim2.new(0, 425,0, 425)}):Play()
		game:GetService("TweenService"):Create(ripple, TweenInfo.new(0.43), {BackgroundTransparency = 1}):Play()

	end
	parent.Text = "  "..header
	repeat task.wait() until game:GetService("TweenService")
	parent.MouseEnter:Connect(function()
		game:GetService("TweenService"):Create(parent, TweenInfo.new(0.43), {BackgroundColor3 = Color3.fromRGB(45,45,45)}):Play()
		game:GetService("TweenService"):Create(parent, TweenInfo.new(0.43), {TextColor3 = Color3.fromRGB(150,150,150)}):Play()
		game:GetService("TweenService"):Create(parent.UICorner, TweenInfo.new(0.43), {CornerRadius = UDim.new(0,8)}):Play()
		game:GetService("TweenService"):Create(parent.UIStroke, TweenInfo.new(0.43), {Transparency = 0.2}):Play()
	end)
	parent.MouseLeave:Connect(function()
		game:GetService("TweenService"):Create(parent, TweenInfo.new(0.43), {BackgroundColor3 = Color3.fromRGB(39,39,39)}):Play()
		game:GetService("TweenService"):Create(parent, TweenInfo.new(0.43), {TextColor3 = Color3.fromRGB(100,100,100)}):Play()
		game:GetService("TweenService"):Create(parent.UICorner, TweenInfo.new(0.43), {CornerRadius = UDim.new(0,4)}):Play()
		game:GetService("TweenService"):Create(parent.UIStroke, TweenInfo.new(0.43), {Transparency = 0.8}):Play()
	end)
	parent.MouseButton1Click:Connect(function()
		local succ, err = pcall(callback)
		if err then
			RippleEffect(true)
		else
			RippleEffect(false)
		end
	end)
end

function CreateToggle(parent, header, callback, callback2)
	local active = false
	local function RippleEffect(didError)
		local ripple = Instance.new("Frame")
		if didError == true then
			ripple.BackgroundColor3 = Color3.fromRGB(255, 93, 96)
		else
			ripple.BackgroundColor3 = Color3.fromRGB(150,150,150)
		end
		ripple.Parent = parent
		ripple.AnchorPoint = Vector2.new(0.5, 0.5)
		ripple.Name = "RippleEffect"
		ripple.Position = UDim2.new(0.483, 0,0.552, 0)
		ripple.Size = UDim2.new(0,0,0,0)
		ripple.BackgroundTransparency = 0.5
		local corner = Instance.new("UICorner")
		corner.Parent = ripple

		game:GetService("TweenService"):Create(ripple, TweenInfo.new(0.43), {Size = UDim2.new(0, 425,0, 425)}):Play()
		game:GetService("TweenService"):Create(ripple, TweenInfo.new(0.43), {BackgroundTransparency = 1}):Play()

	end
	parent.Text = "  "..header
	repeat task.wait() until game:GetService("TweenService")
	parent.MouseEnter:Connect(function()
		game:GetService("TweenService"):Create(parent, TweenInfo.new(0.43), {BackgroundColor3 = Color3.fromRGB(45,45,45)}):Play()
		game:GetService("TweenService"):Create(parent, TweenInfo.new(0.43), {TextColor3 = Color3.fromRGB(150,150,150)}):Play()
		game:GetService("TweenService"):Create(parent.UICorner, TweenInfo.new(0.43), {CornerRadius = UDim.new(0,8)}):Play()
		game:GetService("TweenService"):Create(parent.UIStroke, TweenInfo.new(0.43), {Transparency = 0.2}):Play()
	end)
	parent.MouseLeave:Connect(function()
		game:GetService("TweenService"):Create(parent, TweenInfo.new(0.43), {BackgroundColor3 = Color3.fromRGB(39,39,39)}):Play()
		game:GetService("TweenService"):Create(parent, TweenInfo.new(0.43), {TextColor3 = Color3.fromRGB(100,100,100)}):Play()
		game:GetService("TweenService"):Create(parent.UICorner, TweenInfo.new(0.43), {CornerRadius = UDim.new(0,4)}):Play()
		game:GetService("TweenService"):Create(parent.UIStroke, TweenInfo.new(0.43), {Transparency = 0.8}):Play()
	end)
	parent.MouseButton1Click:Connect(function()
		if active == false then
			active = true
			local succ, err = pcall(callback)
			if err then
				RippleEffect(true)
			else
				RippleEffect(false)
				game:GetService("TweenService"):Create(parent.Toggle, TweenInfo.new(0.43), {BackgroundColor3 = Color3.fromRGB(35,35,35)}):Play()
				game:GetService("TweenService"):Create(parent.Toggle.Frame, TweenInfo.new(0.43), {Position = UDim2.new(0.839, 0,0.475, 0)}):Play()
				repeat task.wait() callback() until active == false
				pcall(callback2)
				game:GetService("TweenService"):Create(parent.Toggle, TweenInfo.new(0.43), {BackgroundColor3 = Color3.fromRGB(32,32,32)}):Play()
				game:GetService("TweenService"):Create(parent.Toggle.Frame, TweenInfo.new(0.43), {Position = UDim2.new(0.172, 0,0.475, 0)}):Play()
			end
		else
			RippleEffect(false)
			active = false
		end
		
	end)
end


function CreateKeybindButton(parent, header, callback)
	local focused = false
	local keybind = nil
	local function RippleEffect(didError)
		local ripple = Instance.new("Frame")
		if didError == true then
			ripple.BackgroundColor3 = Color3.fromRGB(255, 93, 96)
		else
			ripple.BackgroundColor3 = Color3.fromRGB(150,150,150)
		end
		ripple.Parent = parent
		ripple.AnchorPoint = Vector2.new(0.5, 0.5)
		ripple.Name = "RippleEffect"
		ripple.Position = UDim2.new(0.483, 0,0.552, 0)
		ripple.Size = UDim2.new(0,0,0,0)
		ripple.BackgroundTransparency = 0.5
		local corner = Instance.new("UICorner")
		corner.Parent = ripple

		game:GetService("TweenService"):Create(ripple, TweenInfo.new(0.43), {Size = UDim2.new(0, 425,0, 425)}):Play()
		game:GetService("TweenService"):Create(ripple, TweenInfo.new(0.43), {BackgroundTransparency = 1}):Play()

	end
	parent.Text = "  "..header
	repeat task.wait() until game:GetService("TweenService")
	parent.MouseEnter:Connect(function()
		game:GetService("TweenService"):Create(parent, TweenInfo.new(0.43), {BackgroundColor3 = Color3.fromRGB(45,45,45)}):Play()
		game:GetService("TweenService"):Create(parent, TweenInfo.new(0.43), {TextColor3 = Color3.fromRGB(150,150,150)}):Play()
		game:GetService("TweenService"):Create(parent.UICorner, TweenInfo.new(0.43), {CornerRadius = UDim.new(0,8)}):Play()
		game:GetService("TweenService"):Create(parent.UIStroke, TweenInfo.new(0.43), {Transparency = 0.2}):Play()
	end)
	parent.MouseLeave:Connect(function()
		game:GetService("TweenService"):Create(parent, TweenInfo.new(0.43), {BackgroundColor3 = Color3.fromRGB(39,39,39)}):Play()
		game:GetService("TweenService"):Create(parent, TweenInfo.new(0.43), {TextColor3 = Color3.fromRGB(100,100,100)}):Play()
		game:GetService("TweenService"):Create(parent.UICorner, TweenInfo.new(0.43), {CornerRadius = UDim.new(0,4)}):Play()
		game:GetService("TweenService"):Create(parent.UIStroke, TweenInfo.new(0.43), {Transparency = 0.8}):Play()
	end)
	parent.KeyBind.MouseButton1Click:Connect(function()
		focused = true
		parent.KeyBind.Text = "{ ... }"
	end)
	game.UserInputService.InputBegan:Connect(function(input, gpe)
		if focused == true then
			keybind = nil
			keybind = input.KeyCode
			
			local keybind = tostring(input.KeyCode)
			local split = string.split(keybind, ".")
			if input.KeyCode == Enum.KeyCode.Unknown then
				parent.KeyBind.Text = " { Click }"
			else
				parent.KeyBind.Text = "{ "..split[3].." }"
			end
			
			focused = false
		elseif keybind ~= nil and focused == false and input.KeyCode == keybind and not gpe then
			local succ, err = pcall(callback)
			if err then
				RippleEffect(true)
			else
				RippleEffect(false)
			end
		end
	end)
end

function CreateKeybindToggle(parent, header, callback, callback2)
	local focused = false
	local keybind = nil
	local active = false
	local function RippleEffect(didError)
		local ripple = Instance.new("Frame")
		if didError == true then
			ripple.BackgroundColor3 = Color3.fromRGB(255, 93, 96)
		else
			ripple.BackgroundColor3 = Color3.fromRGB(150,150,150)
		end
		ripple.Parent = parent
		ripple.AnchorPoint = Vector2.new(0.5, 0.5)
		ripple.Name = "RippleEffect"
		ripple.Position = UDim2.new(0.483, 0,0.552, 0)
		ripple.Size = UDim2.new(0,0,0,0)
		ripple.BackgroundTransparency = 0.5
		local corner = Instance.new("UICorner")
		corner.Parent = ripple

		game:GetService("TweenService"):Create(ripple, TweenInfo.new(0.43), {Size = UDim2.new(0, 425,0, 425)}):Play()
		game:GetService("TweenService"):Create(ripple, TweenInfo.new(0.43), {BackgroundTransparency = 1}):Play()

	end
	parent.Text = "  "..header
	repeat task.wait() until game:GetService("TweenService")
	parent.MouseEnter:Connect(function()
		game:GetService("TweenService"):Create(parent, TweenInfo.new(0.43), {BackgroundColor3 = Color3.fromRGB(45,45,45)}):Play()
		game:GetService("TweenService"):Create(parent, TweenInfo.new(0.43), {TextColor3 = Color3.fromRGB(150,150,150)}):Play()
		game:GetService("TweenService"):Create(parent.UICorner, TweenInfo.new(0.43), {CornerRadius = UDim.new(0,8)}):Play()
		game:GetService("TweenService"):Create(parent.UIStroke, TweenInfo.new(0.43), {Transparency = 0.2}):Play()
	end)
	parent.MouseLeave:Connect(function()
		game:GetService("TweenService"):Create(parent, TweenInfo.new(0.43), {BackgroundColor3 = Color3.fromRGB(39,39,39)}):Play()
		game:GetService("TweenService"):Create(parent, TweenInfo.new(0.43), {TextColor3 = Color3.fromRGB(100,100,100)}):Play()
		game:GetService("TweenService"):Create(parent.UICorner, TweenInfo.new(0.43), {CornerRadius = UDim.new(0,4)}):Play()
		game:GetService("TweenService"):Create(parent.UIStroke, TweenInfo.new(0.43), {Transparency = 0.8}):Play()
	end)
	parent.KeyBind.MouseButton1Click:Connect(function()
		focused = true
		parent.KeyBind.Text = "{ ... }"
	end)
	game.UserInputService.InputBegan:Connect(function(input, gpe)
		if focused == true then
			keybind = nil
			keybind = input.KeyCode

			local keybind = tostring(input.KeyCode)
			local split = string.split(keybind, ".")
			if input.KeyCode == Enum.KeyCode.Unknown then
				parent.KeyBind.Text = " { Click }"
			else
				parent.KeyBind.Text = "{ "..split[3].." }"
			end

			focused = false
		elseif keybind ~= nil and focused == false and input.KeyCode == keybind and not gpe then
			if active == false then
				active = true
				local succ, err = pcall(callback)
				if err then
					RippleEffect(true)
				else
					RippleEffect(false)
					game:GetService("TweenService"):Create(parent.Toggle, TweenInfo.new(0.43), {BackgroundColor3 = Color3.fromRGB(35,35,35)}):Play()
					game:GetService("TweenService"):Create(parent.Toggle.Frame, TweenInfo.new(0.43), {Position = UDim2.new(0.839, 0,0.475, 0)}):Play()
					repeat task.wait() callback() until active == false
					pcall(callback2)
					game:GetService("TweenService"):Create(parent.Toggle, TweenInfo.new(0.43), {BackgroundColor3 = Color3.fromRGB(32,32,32)}):Play()
					game:GetService("TweenService"):Create(parent.Toggle.Frame, TweenInfo.new(0.43), {Position = UDim2.new(0.172, 0,0.475, 0)}):Play()
				end
			else
				RippleEffect(false)
				active = false
			end
		end
	end)
end
